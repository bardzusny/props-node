swagger: "2.0"
info:
  version: "0.0.1"
  title: Node.JS Props
host: localhost:10010
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /props:
    x-swagger-router-controller: props
    post:
      description: Creates new prop
      operationId: create
      parameters:
        - name: body
          in: formData
          description: Text of actual prop
          required: true
          type: string
        - name: propsed
          in: formData
          description: IDs of users that we want to give prop to
          required: true
          type: array
          items:
            type: number
      responses:
        "201":
          description: Success
          schema:
            items:
              $ref: "#/definitions/PropsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Fetches list of props
      operationId: propsList
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PropsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: users
    post:
      description: Registers new user account
      operationId: userRegister
      parameters:
        - name: username
          in: formData
          description: Username of user
          required: true
          type: string
        - name: password
          in: formData
          description: Password for this user
          required: true
          type: string
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/UserResponse"
        "404":
          description: Trying to prop non-existant user
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Fetches list of users
      operationId: usersList
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: "#/definitions/UserResponse"
  /users/login:
    x-swagger-router-controller: users
    post:
      description: Logs in existing user
      operationId: login
      parameters:
        - name: username
          in: formData
          description: Username of user
          required: true
          type: string
        - name: password
          in: formData
          description: Correct password of given user
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            properties:
              token:
                type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  PropsResponse:
    required:
      - body
    properties:
      body:
        type: string
      propsed:
        type: array
        items:
          $ref: "#/definitions/UserResponse"
  UserResponse:
    required:
      - username
    properties:
      username:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
